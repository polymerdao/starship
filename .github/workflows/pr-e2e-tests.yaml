name: PR E2E test on Comment

on:
  issue_comment:
    types:
      - created
      - edited

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-pr-e2e-tests
  cancel-in-progress: true

jobs:
  pr-e2e-test:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/run_e2e')

    strategy:
      matrix:
        config-file:
          - "one-chain.yaml"
          - "two-chain.yaml"
          - "build-chain.yaml"
          - "one-custom-chain.yaml"
          - "multi-validator.yaml"
          - "two-chain-gorelayer.yaml"
          - "simapp.yaml"
          - "injective.yaml"
          - "evmos.yaml"
          - "one-chain-starship-faucet.yaml"
          - "multi-validator-starship-faucet.yaml"
      fail-fast: true
      max-parallel: 1

    env:
      CONFIG_FILE: "tests/e2e/configs/${{ matrix.config-file }}"

    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Run remote e2e test
        id: e2e-test
        uses: ./.github/actions/e2e-test
        with:
          config-file: ${{ env.CONFIG_FILE }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          aws-eks-cluster: ${{ vars.AWS_EKS_CLUSTER }}

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      # todo: change this to be post step of the action
      - name: Cleanup cluster
        if: always()
        run: |
          helm delete $DEVNET_NAME --debug --namespace $DEVNET_NAMESPACE --wait || true
          kubectl delete namespace $DEVNET_NAMESPACE --wait=true || true
        shell: bash
        env:
          DEVNET_NAME: ${{ steps.e2e-test.outputs.name }}
          DEVNET_NAMESPACE: ${{ steps.e2e-test.outputs.namespace }}
