{{- $keys := .Files.Get "configs/keys.json" | fromJson }}
{{- range $relayer := .Values.relayers }}
{{- if eq $relayer.type "ts-relayer" }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ $relayer.type }}-{{ $relayer.name }}"
data:
  template-app.yaml: |-
    src: <SRC>
    dest: <DEST>
    mnemonic: <MNEMONIC>

  registry.yaml: |-
    version: 1
    chains:
      {{- range $i, $chain := $relayer.chains }}
      {{ $chain }}:
        {{- range $fullchain := $.Values.chains }}
        {{- if eq $fullchain.name $chain }}
        {{ $defaultFile := $.Files.Get "defaults.yaml" | fromYaml }}
        {{ $defaultChain := get $defaultFile.defaultChains $fullchain.type | default dict }}
        {{ $fullchain = merge $fullchain $defaultChain }}
        chain_id: {{ $chain }}
        # You can include multiple RPC endpoints and it will rotate through them if
        # one is down (TODO)
        rpc:
          - http://{{ include "devnet.chain.name" $chain }}-genesis.{{ $.Release.Namespace }}.svc.cluster.local:26657
        # Bech32 prefix for addresses
        prefix: {{ $fullchain.prefix }}
        # This determines the gas payments we make (and defines the fee token)
        gas_price: 0.025{{ $fullchain.denom }}
        # The path we use to derive the private key from the mnemonic
        # Note: The hd paths shown have no meaningful relationship to the existing chains.
        # It is recommended practice to use a different hd_path than those commonly used for user accounts.
        hd_path: {{ $fullchain.hdPath }}
        # You can optionally define a default ics20_port that will be used instead of transfer if no flags set
        ics20_port: 'transfer'
        estimated_block_time: {{ $.Values.timeouts.timeout_commit | toString | replace "ms" "" | float64 }}
        estimated_indexer_time: {{ $.Values.timeouts.time_iota_ms | toString | replace "ms" "" | float64 }}
        {{- end }}
        {{- end }}
      {{- end }}
---
{{- end }}
{{- end }}
